name: Incremental Release
description: Create a release based on increment keywords in the most recent commit message
inputs:
  DEFAULT_INCREMENT:
    description: Default increment if no value is found
    default: "skip version"
  DRY_RUN:
    description: Simulates a release but does not actually do one
    default: false
  GITHUB_TOKEN:
    description: Token to use to update version in 'package.json' and create GitHub release/tag
    required: true
runs:
  using: composite
  steps:
    - name: Get Version
      run: |
        LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "Last commit message: ${LAST_COMMIT_MESSAGE}"

        TYPE=${DEFAULT_INCREMENT}
        if [[ $LAST_COMMIT_MESSAGE == *"[increment patch]"* ]]; then
          echo "Found [increment patch], creating a patch release..."
          TYPE="patch"
        elif [[ $LAST_COMMIT_MESSAGE == *"[increment minor]"* ]]; then
          echo "Found [increment minor], creating a minor release..."
          TYPE="minor"
        elif [[ $LAST_COMMIT_MESSAGE == *"[increment major]"* ]]; then
          echo "Found [increment major], creating a major release..."
          TYPE="major"
        elif [[ $LAST_COMMIT_MESSAGE == *"[skip version]"* ]]; then
          echo "Found [skip version], skipping release..."
          TYPE="skip"
        else
          echo "Did not find commit message flag, using DEFAULT_INCREMENT (${DEFAULT_INCREMENT})"
        fi

        if [[ $TYPE == "skip" ]]; then
          exit 0;
        fi

        git config user.name github-actions
        git config user.email github-actions@github.com
        
        NEW_VERSION=$(npm version ${TYPE} -m "Updated version to %s [skip ci][skip version]")
        echo "New version created: $NEW_VERSION"

        git push --tags

      env:
        DEFAULT_INCREMENT: ${{ inputs.DEFAULT_INCREMENT }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      shell: bash
